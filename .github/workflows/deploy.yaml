name: Deploy to EC2 üöÄ

on:
  push:
    branches:
      - "development" # This triggers the workflow on push to any branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch ‚úÖ
        uses: actions/checkout@v2

      - name: Set up SSH key and whitelist EC2 IP address üêª‚Äç‚ùÑÔ∏è
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create .env file dynamically üß®
        env:
          ENV: ${{ secrets.ENV }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "ENV=${ENV}" >> env
          echo "EC2_USERNAME=${EC2_USERNAME}" >> env

      - name: Set up Python üêç
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64

      - name: Install dependencies and deploy üöô
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # Create and activate virtual environment
          python -m venv venv
          source venv/bin/activate
          
          # Install Python dependencies
          pip install -r requirements.txt

          # Copy files to remote server
          scp -r * $EC2_USERNAME@$EC2_HOST:/home/ubuntu/PLANE/PLANE-DEV/cs-plane-api
          
          # SSH into the server and perform deployment tasks
          ssh ubuntu@$EC2_HOST 'cd /home/ubuntu/PLANE/PLANE-DEV/cs-plane-api && \
                                sudo pip3 install -r requirements.txt && \
                                sudo python3 manage.py migrate && \
                                sudo systemctl restart gunicorn.service'

      - name: Clean up SSH key üöÄ
        if: always()
        run: rm -f ~/.ssh/id_rsa
